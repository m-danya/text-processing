1. Правильная скобочная последовательность.

Поскольку этот язык контекстно-свободен, а не регулярен, фиксирую глубину раскрытия, чтобы
получить конечный набор регулярных выражений.

2. Предложения
Считается, что предложение есть что-то (non-greedy поиск этого "чего-то"), разделенное двумя delimeter-ами.
Используется positive lookbegind assertion.

3. Именованные сущности

Список имён взят отсюда: https://github.com/sorokinpf/russian_names

Пришлось взять топ-`N_LIMIT` имен и фамилий, иначе скрипт съедал 40+ гб оперативы.
Хорошо, что они отсортированы по популярности.

Пришлось уменьшить `N_LIMIT`, чтобы регулярка отрабатывала за 30 секунд.
Пришлось убрать идею про Имя+Фамилия, т.к. комбинаций много, а они все равно покрываются подходом "2 слова с заглавной
буквы подряд". Жаль. Зато тогда `N_LIMIT` можно не ставить, если не перебирать все возможные комбинации имен и фамилий.

4. Парсинг HTML

тут просто втупую используем тот факт, что сайт написан без использования style.css (хотя тогда тоже были бы классы)
и ставим positive lookbehind и positive lookahead. У них не может быть переменная длина, поэтому в одном из подвыражений
используется перебор по количеству \d. В итоге отказался в некоторых местах от lookbegind-ов в пользу просто части регулярки.

Оказалось, что в разных html страницах теги могут немного отличаться, объединил через "или"
Ааааааааа!!! добавил еще кучу вариантов. Кто это кодил..